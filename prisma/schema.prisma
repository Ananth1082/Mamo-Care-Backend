generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  user_name    String
  phone_number String    @unique
  sessions     Session[]
  role         Role      @default(Patient)
  doctor       Doctor?
  patient      Patient?
}

model Doctor {
  doctor_id     String? @unique
  user          User?   @relation(fields: [doctor_id], references: [id])
  phone_number  String  @id
  hospital_name String?
  speciality    String?
}

model Patient {
  user             User?          @relation(fields: [user_id], references: [id])
  user_id          String?        @unique
  ip_number        String         @id
  blood_group      BloodGroup
  forms            FormResponse[]
  meds             Medication[]
  patient_contacts String[]
}

model Session {
  id         Int      @id @default(autoincrement())
  hashtoken  String
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  created_at DateTime @default(now())
  update_at  DateTime @default(now()) @updatedAt

  @@unique([user_id, hashtoken])
}

model FormResponse {
  id           Int      @id @default(autoincrement())
  patient_id   String
  submitted_at DateTime
  question1    String
  question2    String
  question3    String
  patient      Patient  @relation(fields: [patient_id], references: [ip_number])

  @@unique([patient_id, submitted_at])
}

model Medication {
  id          Int      @id @default(autoincrement())
  patient_id  String
  tablet_name String
  notes       String
  Monday      String[]
  Tuesday     String[]
  Wednesday   String[]
  Thursday    String[]
  Friday      String[]
  Saturday    String[]
  Sunday      String[]
  patient     Patient  @relation(fields: [patient_id], references: [ip_number])

  @@unique([patient_id, tablet_name])
}

enum BloodGroup {
  Aplus
  Aminus
  Bplus
  Bminus
  Oplus
  Ominus
  ABplus
  ABminus
}

enum Role {
  Doctor
  Patient
}
